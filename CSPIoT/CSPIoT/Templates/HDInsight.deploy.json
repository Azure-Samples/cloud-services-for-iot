{
	"$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
  "parameters": {
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "clusterType": {
      "type": "string",
      "allowedValues": [
        "hadoop",
        "hbase",
        "storm",
        "spark"
      ],
      "metadata": {
        "description": "The type of the HDInsight cluster to create."
      }
    },
    "clusterLoginUserName": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to submit jobs to the cluster and to log into cluster dashboards."
      }
    },
    "clusterLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "sshUserName": {
      "type": "string",
      "metadata": {
        "description": "These credentials can be used to remotely access the cluster."
      }
    },
    "sshPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password must be at least 10 characters in length and must contain at least one digit, one non-alphanumeric character, and one upper or lower case letter."
      }
    },
    "clusterWorkerNodeCount": {
      "type": "int",
      "defaultValue": 4,
      "metadata": {
        "description": "The number of nodes in the HDInsight cluster."
      }
    }
  },
  "variables": {
    "storageAccountName": "[concat('csphd','st',uniquestring(resourceGroup().id))]",
    "iotHubName": "[concat('csphd','iothub',uniquestring(resourceGroup().id))]",
    "streamAnalyticsName": "[concat('csphd','iotstream',uniquestring(resourceGroup().id))]",
    "storageBlobContainer": "cspiothdcontainer",
    "storagePathPrefix": "[concat(variables('storageAccountName'), '/{date}/{time}')]",
    "storageDateFormat": "yyyy/MM/dd",
    "storageTimeFormat": "HH",
    "streamInput": "streamInput",
    "streamOutput": "streamOutput",
    "streamQueryName": "streamQuery",
    "streamQuerySyntax": "[concat('select * into ',variables('streamOutput'),' from ', variables('streamInput'))]",
    "clusterName": "[concat('csp','hdinsight',uniquestring(resourceGroup().id))]",
    "defaultApiVersion": "2015-05-01-preview",
    "clusterApiVersion": "2015-03-01-preview"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-06-15",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2016-02-03",
      "type": "Microsoft.Devices/IotHubs",
      "name": "[variables('iotHubName')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "S1",
        "tier": "Standard",
        "capacity": 1
      },
      "properties": {
        "location": "[resourceGroup().location]"
      }
    },
    {
      "apiVersion": "2015-06-01",
      "type": "Microsoft.StreamAnalytics/streamingjobs",
      "name": "[variables('streamAnalyticsName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Devices/IotHubs/', variables('iotHubName'))]"
      ],
      "properties": {
        "eventsOutOfOrderMaxDelayInSeconds": 10,
        "eventsOutOfOrderPolicy": "drop",
        "inputs": [
          {
            "name": "[variables('streamInput')]",
            "properties": {
              "type": "stream",
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Devices/IotHubs",
                "properties": {
                  "iotHubNamespace": "[variables('iotHubName')]",
                  "sharedAccessPolicyName": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2016-02-03').value[0].keyName]",
                  "sharedAccessPolicyKey": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2016-02-03').value[0].primaryKey]"
                }
              }
            }
          }
        ],
        "sku": {
          "name": "standard"
        },
        "transformation": {
          "name": "[variables('streamQueryName')]",
          "properties": {
            "streamingUnits": 1,
            "query": "[variables('streamQuerySyntax')]"
          }
        },
        "outputs": [
          {
            "name": "[variables('streamOutput')]",
            "properties": {
              "serialization": {
                "type": "JSON",
                "properties": {
                  "encoding": "UTF8"
                }
              },
              "datasource": {
                "type": "Microsoft.Storage/Blob",
                "properties": {
                  "storageAccounts": [
                    {
                      "accountName": "[variables('storageAccountName')]",
                      "accountKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-06-15').key1]"
                    }
                  ],
                  "container": "[variables('storageBlobContainer')]",
                  "pathPattern": "[variables('storagePathPrefix')]",
                  "dateFormat": "[variables('storageDateFormat')]",
                  "timeFormat": "[variables('storageTimeFormat')]"
                }
              }
            }
          }
        ],
        "start": {
          "outputStartMode": "",
          "outputStartTime": ""
        }
      }
    },
    {
      "name": "[variables('clusterName')]",
      "type": "Microsoft.HDInsight/clusters",
      "location": "[resourceGroup().location]",
      "apiVersion": "[variables('clusterApiVersion')]",
      "dependsOn": [ "[concat('Microsoft.Storage/storageAccounts/',variables('storageAccountName'))]" ],
      "tags": {

      },
      "properties": {
        "clusterVersion": "3.2",
        "osType": "Linux",
        "clusterDefinition": {
          "kind": "[parameters('clusterType')]",
          "configurations": {
            "gateway": {
              "restAuthCredential.isEnabled": true,
              "restAuthCredential.username": "[parameters('clusterLoginUserName')]",
              "restAuthCredential.password": "[parameters('clusterLoginPassword')]"
            }
          }
        },
        "storageProfile": {
          "storageaccounts": [
            {
              "name": "[concat(variables('storageAccountName'),'.blob.core.windows.net')]",
              "isDefault": true,
              "container": "[variables('storageBlobContainer')]",
              "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), variables('defaultApiVersion')).key1]"
            }
          ]
        },
        "computeProfile": {
          "roles": [
            {
              "name": "headnode",
              "targetInstanceCount": "2",
              "hardwareProfile": {
                "vmSize": "Standard_D3"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              }
            },
            {
              "name": "workernode",
              "targetInstanceCount": "[parameters('clusterWorkerNodeCount')]",
              "hardwareProfile": {
                "vmSize": "Standard_D3"
              },
              "osProfile": {
                "linuxOperatingSystemProfile": {
                  "username": "[parameters('sshUserName')]",
                  "password": "[parameters('sshPassword')]"
                }
              }
            }
          ]
        }
      }
    }
  ],
	"outputs": {
    "iothubHostName": {
      "value": "[reference(concat('Microsoft.Devices/IotHubs/', variables('iotHubName')), '2016-02-03').hostName]",
      "type": "string"
    },
    "iotHubSharedAccessKeyName": {
      "value": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2016-02-03').value[0].keyName]",
      "type": "string"
    },
    "iotHubSharedAccessKey": {
      "value": "[listKeys(resourceId('Microsoft.Devices/IotHubs', variables('iotHubName')), '2016-02-03').value[0].primaryKey]",
      "type": "string"
    }
	}
}